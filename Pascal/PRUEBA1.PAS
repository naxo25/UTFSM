PROGRAM XPERTO;

USES CRT;

TYPE

    REG_PROGRAMACION = RECORD
                             FECHA      : BYTE;
                             COD_LOCAL  : STRING[2];
                             GOL_LOCAL  : BYTE;
                             COD_VISITA : STRING[2];
                             GOL_VISITA : BYTE;
                             ESTADO     : CHAR;
                       END;

    REG_EQUIPOS = RECORD
                        COD_EQUIPO         : STRING[2];
                        NOM_EQUIPO         : STRING[40];
                        PARTIDOS_JUGADOS   : BYTE;
                        PARTIDOS_GANADOS   : BYTE;
                        PARTIDOS_EMPATADOS : BYTE;
                        PARTIDOS_PERDIDOS  : BYTE;
                        GOLES_A_FAVOR      : BYTE;
                        GOLES_EN_CONTRA    : BYTE;
                  END;

       {NO MANDO EL ARCHIVO NOMBRES ASI QUE LISTE CON EL CODIGO}

VAR {POSICIONES ES PARA GUARDAR LOS LUGARES DE LOS 3 PRIMEROS Y ULTIMOS}
    POSICIONES                  :  ARRAY [1..6] OF BYTE;
    ARCH                        :  TEXT;
    BUFFER                      :  STRING;
    {ESTADO ES QUIEN GANO, L SI GANO LOCAL, V SI GANO VISITA, E SI FUE EMPATE}
    ESTADO                      :  CHAR;
    FECHA,I                     :  BYTE;
    COD_LOCAL,COD_VISITA        :  STRING[2];
    GOL_LOCAL,GOL_VISITA        :  BYTE;
    PROGR                       :  FILE OF REG_PROGRAMACION;
    BFPROGR                     :  REG_PROGRAMACION;
    EQUIPOS,AUXEQUIPOS          :  FILE OF REG_EQUIPOS;
    BFEQUIPOS                   :  REG_EQUIPOS;
    X                           :  INTEGER;

PROCEDURE ACTUALIZAR_GOLES;

VAR POSICION,CONT:INTEGER;

BEGIN

     POSICION:=-1;
     CONT:=-1;
     RESET(PROGR);
     WHILE (NOT EOF(PROGR)) AND (POSICION=-1) DO
     BEGIN
          CONT:=CONT+1;
          READ(PROGR,BFPROGR);
          IF BFPROGR.COD_LOCAL=COD_LOCAL THEN
             POSICION:=CONT;
     END;
     CLOSE(PROGR);
     RESET(PROGR);
     IF POSICION>-1 THEN
     BEGIN
          SEEK(PROGR,POSICION);
          BFPROGR.FECHA:=FECHA;
          BFPROGR.COD_LOCAL:=COD_LOCAL;
          BFPROGR.GOL_LOCAL:=GOL_LOCAL;
          BFPROGR.COD_VISITA:=COD_VISITA;
          BFPROGR.GOL_VISITA:=GOL_VISITA;
          IF GOL_LOCAL>GOL_VISITA THEN
             ESTADO:='L'
             ELSE IF GOL_LOCAL<GOL_VISITA THEN
                  ESTADO:='V'
                  ELSE ESTADO:='E';
          BFPROGR.ESTADO:='S';
          WRITE(PROGR,BFPROGR);
     END;
     CLOSE(PROGR);

END;

PROCEDURE CREAR_EQUIPOS_LOCAL;

VAR POSICION,CONT:INTEGER;

BEGIN

     POSICION:=-1;
     CONT:=-1;
     RESET(EQUIPOS);
     WHILE (NOT EOF(EQUIPOS)) AND (POSICION=-1) DO
     BEGIN
          CONT:=CONT+1;
          READ(EQUIPOS,BFEQUIPOS);
          IF BFEQUIPOS.COD_EQUIPO=COD_LOCAL THEN
             POSICION:=CONT;
     END;
     CLOSE(EQUIPOS);
     RESET(EQUIPOS);
     IF POSICION>-1 THEN
     BEGIN
            SEEK(EQUIPOS,POSICION);
            BFEQUIPOS.PARTIDOS_JUGADOS:=BFEQUIPOS.PARTIDOS_JUGADOS+1;
            BFEQUIPOS.COD_EQUIPO:=COD_LOCAL;

            IF BFEQUIPOS.COD_EQUIPO=COD_LOCAL THEN
            BEGIN
            BFEQUIPOS.GOLES_A_FAVOR:=BFEQUIPOS.GOLES_A_FAVOR+GOL_LOCAL;
            BFEQUIPOS.GOLES_EN_CONTRA:=BFEQUIPOS.GOLES_EN_CONTRA+GOL_VISITA;
            IF ESTADO='L' THEN
               BFEQUIPOS.PARTIDOS_GANADOS:=BFEQUIPOS.PARTIDOS_GANADOS+1;
            IF ESTADO='V' THEN
               BFEQUIPOS.PARTIDOS_PERDIDOS:=BFEQUIPOS.PARTIDOS_PERDIDOS+1;
            IF ESTADO='E' THEN
               BFEQUIPOS.PARTIDOS_EMPATADOS:=BFEQUIPOS.PARTIDOS_EMPATADOS+1;
            END;

            IF BFEQUIPOS.COD_EQUIPO=COD_VISITA THEN
            BEGIN
            BFEQUIPOS.GOLES_A_FAVOR:=BFEQUIPOS.GOLES_A_FAVOR+GOL_VISITA;
            BFEQUIPOS.GOLES_EN_CONTRA:=BFEQUIPOS.GOLES_EN_CONTRA+GOL_LOCAL;
            IF ESTADO='V' THEN
               BFEQUIPOS.PARTIDOS_GANADOS:=BFEQUIPOS.PARTIDOS_GANADOS+1;
            IF ESTADO='L' THEN
               BFEQUIPOS.PARTIDOS_PERDIDOS:=BFEQUIPOS.PARTIDOS_PERDIDOS+1;
            IF ESTADO='E' THEN
               BFEQUIPOS.PARTIDOS_EMPATADOS:=BFEQUIPOS.PARTIDOS_EMPATADOS+1;
            END;
            WRITE(EQUIPOS,BFEQUIPOS);
     END;
     CLOSE(EQUIPOS);

END;

PROCEDURE CREAR_EQUIPOS_VISITA;

VAR POSICION,CONT:INTEGER;

BEGIN

     POSICION:=-1;
     CONT:=-1;
     RESET(EQUIPOS);
     WHILE (NOT EOF(EQUIPOS)) AND (POSICION=-1) DO
     BEGIN
          CONT:=CONT+1;
          READ(EQUIPOS,BFEQUIPOS);
          IF BFEQUIPOS.COD_EQUIPO=COD_VISITA THEN
             POSICION:=CONT;
     END;
     CLOSE(EQUIPOS);
     RESET(EQUIPOS);
     IF POSICION>-1 THEN
     BEGIN
            SEEK(EQUIPOS,POSICION);
            BFEQUIPOS.PARTIDOS_JUGADOS:=BFEQUIPOS.PARTIDOS_JUGADOS+1;
            BFEQUIPOS.COD_EQUIPO:=COD_VISITA;

            IF BFEQUIPOS.COD_EQUIPO=COD_LOCAL THEN
            BEGIN
            BFEQUIPOS.GOLES_A_FAVOR:=BFEQUIPOS.GOLES_A_FAVOR+GOL_LOCAL;
            BFEQUIPOS.GOLES_EN_CONTRA:=BFEQUIPOS.GOLES_EN_CONTRA+GOL_VISITA;
            IF ESTADO='L' THEN
               BFEQUIPOS.PARTIDOS_GANADOS:=BFEQUIPOS.PARTIDOS_GANADOS+1;
            IF ESTADO='V' THEN
               BFEQUIPOS.PARTIDOS_PERDIDOS:=BFEQUIPOS.PARTIDOS_PERDIDOS+1;
            IF ESTADO='E' THEN
               BFEQUIPOS.PARTIDOS_EMPATADOS:=BFEQUIPOS.PARTIDOS_EMPATADOS+1;
            END;

            IF BFEQUIPOS.COD_EQUIPO=COD_VISITA THEN
            BEGIN
            BFEQUIPOS.GOLES_A_FAVOR:=BFEQUIPOS.GOLES_A_FAVOR+GOL_VISITA;
            BFEQUIPOS.GOLES_EN_CONTRA:=BFEQUIPOS.GOLES_EN_CONTRA+GOL_LOCAL;
            IF ESTADO='V' THEN
               BFEQUIPOS.PARTIDOS_GANADOS:=BFEQUIPOS.PARTIDOS_GANADOS+1;
            IF ESTADO='L' THEN
               BFEQUIPOS.PARTIDOS_PERDIDOS:=BFEQUIPOS.PARTIDOS_PERDIDOS+1;
            IF ESTADO='E' THEN
               BFEQUIPOS.PARTIDOS_EMPATADOS:=BFEQUIPOS.PARTIDOS_EMPATADOS+1;
            END;
            WRITE(EQUIPOS,BFEQUIPOS);
     END;
     CLOSE(EQUIPOS);

END;

PROCEDURE PARTIDOS_GANADOS_PERDIDOS;

VAR CONT,I:INTEGER; PUNTOS:BYTE;

BEGIN
     {ESTA PARTE ES PARA LOS GANADORES}
     PUNTOS:=0;
     FOR I:=1 TO 3 DO
     BEGIN
          RESET(EQUIPOS);
          CONT:=-1;
          PUNTOS:=0;
          WHILE NOT EOF (EQUIPOS) DO
          BEGIN
               CONT:=CONT+1;
               READ(EQUIPOS,BFEQUIPOS);
               IF (BFEQUIPOS.PARTIDOS_GANADOS>PUNTOS) AND
               (POSICIONES[I-1]<>CONT) AND (POSICIONES[I-2]<>CONT) THEN
               BEGIN
                  POSICIONES[I]:=CONT;
                  PUNTOS:=BFEQUIPOS.PARTIDOS_GANADOS;
               END;
          END;
          CLOSE(EQUIPOS);
     END;

     {ESTA PARTE ES PARA LOS ULTIMOS LUGARES}
     PUNTOS:=0;
     FOR I:=4 TO 6 DO
     BEGIN
          RESET(EQUIPOS);
          CONT:=-1;
          PUNTOS:=6;
          WHILE NOT EOF (EQUIPOS) DO
          BEGIN
               CONT:=CONT+1;
               READ(EQUIPOS,BFEQUIPOS);
               IF (BFEQUIPOS.PARTIDOS_GANADOS<PUNTOS) AND
               (POSICIONES[I-1]<>CONT) AND (POSICIONES[I-2]<>CONT) THEN
               BEGIN
                  POSICIONES[I]:=CONT;
                  PUNTOS:=BFEQUIPOS.PARTIDOS_GANADOS;
               END;
          END;
          CLOSE(EQUIPOS);
     END;

END;

BEGIN

     CLRSCR;
     ASSIGN(ARCH,'RESUL.TXT');
     ASSIGN(PROGR,'PROGRAMA.DAT');
     ASSIGN(EQUIPOS,'EQUIPOS.DAT');
     ASSIGN(AUXEQUIPOS,'AUXEQUIPOS.DAT');
     RESET(EQUIPOS);
     REWRITE(AUXEQUIPOS);
     WHILE NOT EOF (EQUIPOS) DO
     BEGIN
          READ(EQUIPOS,BFEQUIPOS);
          WRITE(AUXEQUIPOS,BFEQUIPOS);
     END;
     CLOSE(EQUIPOS);
     CLOSE(AUXEQUIPOS);
     RESET(ARCH);
     WHILE NOT EOF(ARCH) DO
     BEGIN
          READLN(ARCH,BUFFER);
          VAL(BUFFER[1],FECHA,X);
          COD_LOCAL:=BUFFER[3]+BUFFER[4];
          VAL(BUFFER[6],GOL_LOCAL,X);
          COD_VISITA:=BUFFER[8]+BUFFER[9];
          VAL(BUFFER[11],GOL_VISITA,X);
          ACTUALIZAR_GOLES;
          CREAR_EQUIPOS_LOCAL;
          CREAR_EQUIPOS_VISITA;
     END;
     CLOSE(ARCH);
     PARTIDOS_GANADOS_PERDIDOS;

     {LA LISTA ESTA ORDENADA DE ACUERDO A QUIEN GANO Y PERDIO MAS PARTIDOS}

     WRITELN('NOMBRE    PARTIDOS GANADOS');
     WRITELN('--------------------------');
     WRITELN;
     WRITELN('PRIMEROS LUGARES');
     WRITELN('----------------');
     WRITELN;
     FOR I:=1 TO 3 DO
     BEGIN
          RESET(EQUIPOS);
          SEEK(EQUIPOS,POSICIONES[I]);
          READ(EQUIPOS,BFEQUIPOS);
          WRITELN(BFEQUIPOS.COD_EQUIPO,'        ',BFEQUIPOS.PARTIDOS_GANADOS);
     END;
     WRITELN;
     WRITELN('ULTIMOS LUGARES');
     WRITELN('---------------');
     WRITELN;
     FOR I:=6 DOWNTO 4 DO
     BEGIN
          RESET(EQUIPOS);
          SEEK(EQUIPOS,POSICIONES[I]);
          READ(EQUIPOS,BFEQUIPOS);
          WRITELN(BFEQUIPOS.COD_EQUIPO,'        ',BFEQUIPOS.PARTIDOS_GANADOS);
     END;
     CLOSE(EQUIPOS);
     READLN;
     RESET(AUXEQUIPOS);
     REWRITE(EQUIPOS);
     WHILE NOT EOF (AUXEQUIPOS) DO
     BEGIN
          READ(AUXEQUIPOS,BFEQUIPOS);
          WRITE(EQUIPOS,BFEQUIPOS);
     END;
     CLOSE(EQUIPOS);
     CLOSE(AUXEQUIPOS);
END.